/**
 * Openfort API
 * Complete Openfort API references and guides can be found at: https://www.openfort.io/docs
 *
 * OpenAPI spec version: 1.0.0
 * Contact: founders@openfort.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { TradeType } from '../models/TradeType'

export class CreateExchangeRequest {
  /**
   * The chain ID. Must be a [supported chain](/development/chains).
   */
  chainId: number
  /**
   * The public address that will sign and submit the transaction. If you provide one of a `pla_...` or `acc_...` it will be converted to the corresponding address.
   */
  fromAddress: string
  /**
   * Token address or \'native\' to sell
   */
  tokenInAddress: string
  /**
   * Token address or \'native\' to buy
   */
  tokenOutAddress: string
  /**
   * Amount in the smallest unit of the token
   */
  amount: string
  tradeType: TradeType
  /**
   * The percentage of slippage tolerance. Default = 0.1. Max = 50. Min = 0
   */
  slippagePercent?: number
  /**
   * Maximum hops allowed in optimal route. Default is 2
   */
  maxHops?: number
  /**
   * Latest time swap can execute. Default is 15 minutes
   */
  deadline?: number
  /**
   * ID of the Policy that defines the gas sponsorship strategy (starts with `pol_`). If no Policy is provided, the own Account native token funds will be used to pay for gas.
   */
  policy?: string
  /**
   * Set to `true` to indicate that the transactionIntent request should be resolved as soon as possible, after the transactionIntent is created and simulated and before it arrives on chain.
   */
  optimistic?: boolean

  static readonly discriminator: string | undefined = undefined

  static readonly attributeTypeMap: Array<{
    name: string
    baseName: string
    type: string
    format: string
  }> = [
    {
      name: 'chainId',
      baseName: 'chainId',
      type: 'number',
      format: 'int32',
    },
    {
      name: 'fromAddress',
      baseName: 'fromAddress',
      type: 'string',
      format: '',
    },
    {
      name: 'tokenInAddress',
      baseName: 'tokenInAddress',
      type: 'string',
      format: '',
    },
    {
      name: 'tokenOutAddress',
      baseName: 'tokenOutAddress',
      type: 'string',
      format: '',
    },
    {
      name: 'amount',
      baseName: 'amount',
      type: 'string',
      format: '',
    },
    {
      name: 'tradeType',
      baseName: 'tradeType',
      type: 'TradeType',
      format: '',
    },
    {
      name: 'slippagePercent',
      baseName: 'slippagePercent',
      type: 'number',
      format: 'double',
    },
    {
      name: 'maxHops',
      baseName: 'maxHops',
      type: 'number',
      format: 'double',
    },
    {
      name: 'deadline',
      baseName: 'deadline',
      type: 'number',
      format: 'double',
    },
    {
      name: 'policy',
      baseName: 'policy',
      type: 'string',
      format: '',
    },
    {
      name: 'optimistic',
      baseName: 'optimistic',
      type: 'boolean',
      format: '',
    },
  ]

  static getAttributeTypeMap() {
    return CreateExchangeRequest.attributeTypeMap
  }
}
