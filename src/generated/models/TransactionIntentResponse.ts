/**
 * Openfort API
 * Complete Openfort API references and guides can be found at: https://www.openfort.io/docs
 *
 * OpenAPI spec version: 1.0.0
 * Contact: founders@openfort.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { EntityTypeTRANSACTIONINTENT } from '../models/EntityTypeTRANSACTIONINTENT'
import type { Interaction } from '../models/Interaction'
import type { NextActionResponse } from '../models/NextActionResponse'
import type { ResponseResponse } from '../models/ResponseResponse'
import type { TransactionAbstractionType } from '../models/TransactionAbstractionType'
import type { TransactionIntentDetails } from '../models/TransactionIntentDetails'
import type { TransactionIntentResponseAccount } from '../models/TransactionIntentResponseAccount'
import type { TransactionIntentResponsePlayer } from '../models/TransactionIntentResponsePlayer'
import type { TransactionIntentResponsePolicy } from '../models/TransactionIntentResponsePolicy'
import type { Transition } from '../models/Transition'

export class TransactionIntentResponse {
  id: string
  object: EntityTypeTRANSACTIONINTENT
  createdAt: number
  /**
   * The unix timestamp in seconds when the transactionIntent was created.
   */
  updatedAt: number
  /**
   * The chain ID.
   */
  chainId: number
  abstractionType: TransactionAbstractionType
  /**
   * Transition of statuses the transaction has gone through.
   */
  transitions?: Transition[]
  details?: TransactionIntentDetails
  userOperationHash?: string
  userOperation?: any | null
  response?: ResponseResponse
  interactions?: Interaction[]
  nextAction?: NextActionResponse
  policy?: TransactionIntentResponsePolicy
  player?: TransactionIntentResponsePlayer
  account: TransactionIntentResponseAccount

  static readonly discriminator: string | undefined = undefined

  static readonly attributeTypeMap: Array<{
    name: string
    baseName: string
    type: string
    format: string
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
      format: '',
    },
    {
      name: 'object',
      baseName: 'object',
      type: 'EntityTypeTRANSACTIONINTENT',
      format: '',
    },
    {
      name: 'createdAt',
      baseName: 'createdAt',
      type: 'number',
      format: 'int32',
    },
    {
      name: 'updatedAt',
      baseName: 'updatedAt',
      type: 'number',
      format: 'int32',
    },
    {
      name: 'chainId',
      baseName: 'chainId',
      type: 'number',
      format: 'int32',
    },
    {
      name: 'abstractionType',
      baseName: 'abstractionType',
      type: 'TransactionAbstractionType',
      format: '',
    },
    {
      name: 'transitions',
      baseName: 'transitions',
      type: 'Array<Transition>',
      format: '',
    },
    {
      name: 'details',
      baseName: 'details',
      type: 'TransactionIntentDetails',
      format: '',
    },
    {
      name: 'userOperationHash',
      baseName: 'userOperationHash',
      type: 'string',
      format: '',
    },
    {
      name: 'userOperation',
      baseName: 'userOperation',
      type: 'any',
      format: '',
    },
    {
      name: 'response',
      baseName: 'response',
      type: 'ResponseResponse',
      format: '',
    },
    {
      name: 'interactions',
      baseName: 'interactions',
      type: 'Array<Interaction>',
      format: '',
    },
    {
      name: 'nextAction',
      baseName: 'nextAction',
      type: 'NextActionResponse',
      format: '',
    },
    {
      name: 'policy',
      baseName: 'policy',
      type: 'TransactionIntentResponsePolicy',
      format: '',
    },
    {
      name: 'player',
      baseName: 'player',
      type: 'TransactionIntentResponsePlayer',
      format: '',
    },
    {
      name: 'account',
      baseName: 'account',
      type: 'TransactionIntentResponseAccount',
      format: '',
    },
  ]

  static getAttributeTypeMap() {
    return TransactionIntentResponse.attributeTypeMap
  }
}
